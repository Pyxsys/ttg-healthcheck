# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI/CD

# Controls when the workflow will run
on:
  # Trigger analysis when pushing in master or pull requests, and when creating
  # a pull request.
  push:
    branches:
      - master
  pull_request:
      types: [opened, synchronize, reopened]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x] # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        python-version: [3.6]
        mongodb-version: [3.6]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Start MongoDB v${{ matrix.mongodb-version }}
      uses: supercharge/mongodb-github-action@1.6.0
      with:
          mongodb-version: ${{ matrix.mongodb-version }}
          mongodb-replica-set: rs0

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Client Test
      run: |
        cd client
        npm ci
        npm run test:coveralls

    - name: Server Test
      run: |
        cd server
        npm ci
        mongo mydb_test --eval 'db.createUser({user:"travis",pwd:"test",roles:["readWrite"]});'
        npm run test:coveralls
            
    - name: Python Test
      run: |
        pip install -r daemon/requirements.txt
        cd daemon
        coverage run --branch -m unittest -v
        coverage report

    - name: Client Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel: true
        flag-name: Client Test

    - name: Server Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel: true
        flag-name: Server Test

    - name: Python Coveralls
      uses: AndreMiras/coveralls-python-action@develop
      with:
        github-token: ${{ secrets.github_token }}
        parallel: true
        flag-name: Python Test

  coveralls_finish:
    needs: [Client_Test, Server_Test, Python_Test]
    runs-on: ubuntu-latest
    steps:
    - name: Python Coveralls Finished
      uses: AndreMiras/coveralls-python-action@develop
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true

    - name: Server/Client Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true